version: 2.1

orbs:
  secrethub: secrethub/cli@1.0.0

on-push-master: &on-push-master
  branches:
    only: /main/
  tags:
    ignore: /release-[0-9]+\.[0-9]+\.[0-9]+.*/

on-tag-master: &on-tag-master
  branches:
    ignore: /.*/
  tags:
    only: /release-[0-9]+\.[0-9]+\.[0-9]+.*/

executors:
  build-agent:
    docker:
      - image: circleci/openjdk:11-jdk
  deploy-agent:
    docker:
      - image:  twdps/di-circleci-infra-image:stable

defaults: &defaults
  working_directory: ~/repo

jobs:

  build-starter-boot:
    environment:
      CC_TEST_REPORTER_ID: secrethub://twdps/di/platform/env/build/starter-boot/codeclimate/test-reporter-id
    executor: build-agent
    <<: *defaults

    steps:
      - checkout

      - restore_cache:
          keys:
            # TODO: Is there a better way to do this?  perhaps based on git branch?
            - v1-dependencies-{{ checksum "build.gradle" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: ./gradlew dependencies

      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "build.gradle" }}

      # TODO: Why shouldn't the test-reporter be part of the build-agent image?
#      - run:
#          name: Setup Code Climate test-reporter
#          command: |
#            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
#            chmod +x ./cc-test-reporter
#      - secrethub/exec:
#          step-name: Run CodeClimate pre-build
#          command: |
#            ./cc-test-reporter before-build
      - run:
          name: Run tests
          command: |
            ./gradlew clean test
#      - secrethub/exec:
#          step-name: Configure CodeClimate test-coverage formatting pre-upload
#          command: |
#            JACOCO_SOURCE_PATH=src/main/java ./cc-test-reporter format-coverage ./build/reports/jacoco/test/jacocoTestReport.xml --input-type jacoco -d
#      - secrethub/exec:
#          step-name: Upload CodeClimate test-coverage
#          command: |
#            ./cc-test-reporter upload-coverage -d

  release-starter-boot:
    environment:
      GITHUB_TOKEN: secrethub://twdps/di/svc/github/access-token
      GITHUB_USERNAME: secrethub://twdps/di/svc/github/username
      GITHUB_PACKAGES_TOKEN: secrethub://twdps/di/svc/github-packages/access-token
      GITHUB_PACKAGES_USERNAME: secrethub://twdps/di/svc/github-packages/username
    executor: build-agent
    <<: *defaults

    steps:
      - checkout

      - restore_cache:
          keys:
            # TODO: Is there a better way to do this?  perhaps based on git branch?
            - v1-dependencies-{{ checksum "build.gradle" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: ./gradlew dependencies

      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "build.gradle" }}

      # TODO: Why shouldn't the test-reporter be part of the build-agent image?
      - run:
          name: Publish jar packages to Github Packages repo
          command: |
            ./gradlew publishAllPublicationsToGithubPackagesRepository -PgithubPackagesUsername=$GITHUB_PACKAGES_USERNAME -PgithubPackagesPassword=$GITHUB_PACKAGES_TOKEN -PbuildNumber=$CIRCLE_SHA1

workflows:
  version: 2
  snapshot:
    jobs:
      - build-starter-boot:
          context: dps-va-di
          filters: *on-push-master
  release:
    jobs:
      - build-starter-boot:
          context: dps-va-di
          filters: *on-tag-master
      - release-starter-boot:
          context: dps-va-di
          requires:
            - build-starter-boot
          filters: *on-tag-master
