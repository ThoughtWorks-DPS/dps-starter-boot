
spring:
  kafka:
    bootstrap-servers: "localhost:9092"
    #    bootstrap-servers: "${spring.embedded.kafka.brokers}"
    topic.name: embedded-test-topic
    replication.factor: 1
    partition.number: 1
    consumer:
      auto-offset-reset: earliest
      #client-id: "${pod.name}_${pod.namespace}_${pod.id}"
      group-id: connector
      key-deserializer: org.apache.kafka.common.serialization.IntegerDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      level:
        concurrency: 1
      properties:
        spring.json.trusted.packages: io.twdps.starter.*
        # spring.json.value.default.type: String
    producer:
      # This means the leader will wait for the full set of in-sync replicas to acknowledge
      # the record. This guarantees that the record will not be lost as long as at least one
      # in-sync replica remains alive. This is the strongest available guarantee.
      # This is equivalent to the acks=-1 setting. For an eventing architecture this should be
      # our default setting - no need for extremely high speed compromises here.
      acks: all
      batch-size: 1048576
      buffer-memory: 2097152
      #client-id: "${pod.name}_${pod.namespace}_${pod.id}"
      compression-type: lz4
      retries: 3
      key-serializer: org.apache.kafka.common.serialization.IntegerSerializer
      value-serializer: io.twdps.starter.boot.kafka.CustomJsonSerializer
      #value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        max.in.flight.requests.per.connection: 2
        # spring.json.value.default.type: String

starter:
  boot:
    kafka-connector:
      enabled: true
      producer:
        topic.name: embedded-test-topic
        replication.factor: 1
        partition.number: 1
      consumer:
        topic.name: embedded-test-topic
        level.concurrency: 1
    alternate-kafka-connector:
      enabled: true
      producer:
        topic.name: alternate-test-topic
        replication.factor: 1
        partition.number: 5
