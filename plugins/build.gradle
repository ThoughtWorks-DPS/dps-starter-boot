/*k
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    // Support convention plugins written in Groovy. Convention plugins are build scripts in
    // 'src/main' that automatically become available as plugins in the main build.
    // TODO: see if this package can be externalized as gradle plugins
    id 'groovy-gradle-plugin'

    id 'groovy'
    id 'java'
    id 'java-library'
    id 'java-gradle-plugin'
    id "org.ajoberstar.grgit"
    id 'starter.java.config-conventions'
    id 'starter.java.style-conventions'
    id 'starter.java.test-jacoco-conventions'
    id 'starter.java.deps-plugin-conventions'
    //id 'starter.java.deps-test-conventions'
    id 'starter.java.publish-repo-conventions'
    id 'starter.java.versions-conventions'
}

repositories {

    mavenLocal()
    gradlePluginPortal()
    jcenter()
    mavenCentral()
    maven {
        url findProperty('mavenRepository')
        credentials {
            username = System.getenv('MAVEN_REPO_USERNAME')
            password = System.getenv('MAVEN_REPO_PASSWORD')
        }
    }
}

// TODO: Write task to copy code into README
def generateReadme = tasks.register('generateReadme', Exec) {
    executable('sh')
    args('-c', 'cp intro.md README.md; for i in `ls src/main/groovy`; do cat src/main/resources/gradle/header; echo $i; cat src/main/resources/gradle/toptick; cat src/main/groovy/$i; cat src/main/resources/gradle/bottomtick; done >> README.md')
    workingDir = project.projectDir
}

build.configure { dependsOn generateReadme }
