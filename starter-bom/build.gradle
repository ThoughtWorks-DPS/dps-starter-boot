plugins {
    id 'starter.std.java.bom-conventions'
    id 'org.springframework.boot'
}

javaPlatform {
    allowDependencies()
}

ext {
    arch_unit_version = "0.21.0"
    doc_resources_version = "0.2.5"
    brave_opentracing_version = "1.0.0"
    gradle_intellij_plugin_version = "0.4.14"
    h2_version = "1.4.200"
    junit_insights_version = "1.1.0"
    log4j2_version = "2.17.1"
    mapstruct_version = "1.4.2.Final"
    mockserver_netty_version = "5.11.2"
    opa_filter_starter_version = "1.2.0"
    opentracing_api_version = "0.33.0"
    opentracing_mock_version = "0.33.0"
    opentracing_spring_cloud_jdbc_starter_version = "0.5.9"
    opentracing_spring_web_starter_version = "4.1.0"
    //postgresql_version = "9.4-1206-jdbc42"
    postgresql_version = "42.2.19"
    problem_spring_web_version = "0.26.2"
    //spock_core_version = "1.3-groovy-2.5"
    spock_core_version = "2.0-groovy-3.0"
    spring_boot_version = "${spring_boot_release_version}"
    spring_version = "${spring_framework_version}"
    springdoc_version = "1.5.4"
    springfox_version = "3.0.0"
    swagger_version = "2.1.6"
    test_containers_version = "1.15.2"
    zipkin_reporter_version = "2.16.3"
    zipkin_sender_okhttp3_version = "2.16.3"

}

dependencies {
    api platform("org.apache.logging.log4j:log4j-bom:${log4j2_version}")
    api platform("org.springframework.boot:spring-boot-dependencies:${spring_boot_version}")

    constraints {
        api project(":tracing")
        api project(":error-handling")
        api project(":exceptions")
        api project(":istio-security-config")
        api project(":entity-lifecycle-notifier")
        api project(":kafka-entity-lifecycle-notifier")
        api project(":open-policy-agent-config")
        api project(":springdoc")
        api project(":open-api")
        api project(":test-data")
        api "com.bisnode.opa:opa-filter-spring-boot-starter:${opa_filter_starter_version}"
        api "com.tngtech.archunit:archunit:${arch_unit_version}"
        api "de.adesso:junit-insights:${junit_insights_version}"
        api "gradle.plugin.org.jetbrains.intellij.plugins:gradle-intellij-plugin:${gradle_intellij_plugin_version}"
        api "io.opentracing.brave:brave-opentracing:${brave_opentracing_version}"
        api "io.opentracing.contrib:opentracing-spring-cloud-jdbc-starter:${opentracing_spring_cloud_jdbc_starter_version}"
        api "io.opentracing.contrib:opentracing-spring-web-starter:${opentracing_spring_web_starter_version}"
        api "io.opentracing:opentracing-api:${opentracing_api_version}"
        api "io.opentracing:opentracing-mock:${opentracing_mock_version}"
        api "io.springfox:springfox-boot-starter:${springfox_version}"
        api "io.swagger.core.v3:swagger-annotations:${swagger_version}"
        api "io.swagger.core.v3:swagger-models:${swagger_version}"
        api "io.zipkin.reporter2:zipkin-reporter:${zipkin_reporter_version}"
        api "io.zipkin.reporter2:zipkin-sender-okhttp3:${zipkin_sender_okhttp3_version}"
        api "org.mapstruct:mapstruct:${mapstruct_version}"
        api "org.mapstruct:mapstruct-processor:${mapstruct_version}"
        api "org.mock-server:mockserver-netty:${mockserver_netty_version}"
        api "org.spockframework:spock-core:${spock_core_version}"
        api "org.springdoc:springdoc-openapi-ui:${springdoc_version}"
        api "org.springdoc:springdoc-openapi-webmvc-core:${springdoc_version}"
        api "org.springdoc:springdoc-openapi-webflux-ui:${springdoc_version}"
        api "org.springdoc:springdoc-openapi-hateoas:${springdoc_version}"
        api "org.springdoc:springdoc-openapi-security:${springdoc_version}"
        api "org.springdoc:springdoc-openapi-data-rest:${springdoc_version}"
        api "org.springframework:spring-webmvc:${spring_framework_version}"
        api "org.springframework:spring-webflux:${spring_framework_version}"
        api "org.testcontainers:kafka:${test_containers_version}"
        api "org.zalando:problem-spring-web:${problem_spring_web_version}"
        api('org.springframework:spring-webmvc') {
            //spring-webmvc or spring-webflux
            version {
                require '[5.3.18['
            }
            because 'CVE-2022-22965: https://securelist.com/spring4shell-cve-2022-22965/106239/'
        }
        api('org.springframework:spring-webflux') {
            //spring-webmvc or spring-webflux
            version {
                require '[5.3.18['
            }
            because 'CVE-2022-22965: https://securelist.com/spring4shell-cve-2022-22965/106239/'
        }
        api('org.apache.logging.log4j:log4j-api') {
            version {
                strictly '[2.17.1,3.0['
            }
            because 'CVE-2021-44832, CVE-2021-45105, CVE-2021-45046, CVE-2021-44228: https://www.cyberkendra.com/2021/12/apache-log4j-vulnerability-details-and.html'
        }
        api('org.apache.logging.log4j:log4j-core') {
            version {
                strictly '[2.17.1,3.0['
            }
            because 'CVE-2021-44832, CVE-2021-45105, CVE-2021-45046, CVE-2021-44228: https://www.cyberkendra.com/2021/12/apache-log4j-vulnerability-details-and.html'
        }

        runtime "com.h2database:h2:${h2_version}"
        runtime "org.postgresql:postgresql:${postgresql_version}"
    }
}

