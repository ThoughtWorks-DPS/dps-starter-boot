@startuml
!include architecture-core-factory.plantuml

together {
  interface DataLoader <<T>> {
    loadData(): Map<String, T>
    loadCollections(): Map<String, List<T>>
  }
  class GenericDataFactory <<String>> <<T>> implements DataFactory {
    data: Map<String, T>
    collections: Map<String, List<T>>

    ctor(DataLoader<T>): void
    getNamedData(String): T
    getNamedDataCollection(String): List<T>
  }
  class GenericDataLoader <<T>> implements DataLoader {
    data: Map<String, T>
    collections: Map<String, List<T>>

    loadData(): Map<String, T>
    loadCollections(): Map<String, List<T>>
  }
}

DataLoader <-- GenericDataFactory::ctor

@enduml
